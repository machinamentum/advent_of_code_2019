#import "Array";

struct C {
    #clang_import "#include <stdio.h>";
}

let RANGE_START = 152085;
let RANGE_END   = 670283;

func main() {
    var valid_keys: [..] int;

    // Part 1
    for RANGE_START..RANGE_END {
        var p0 = (it / 1     ) % 10;
        var p1 = (it / 10    ) % 10;
        var p2 = (it / 100   ) % 10;
        var p3 = (it / 1000  ) % 10;
        var p4 = (it / 10000 ) % 10;
        var p5 = (it / 100000) % 10;

        // Check for two adjacent digits being the same.
        var valid = (p5 == p4) || (p4 == p3) || (p3 == p2) || (p2 == p1) || (p1 == p0);
        if valid == false continue;

        valid = (p5 <= p4) && (p4 <= p3) && (p3 <= p2) && (p2 <= p1) && (p1 <= p0);
        if valid == false continue;

        array_add(*valid_keys, it);
    }

    C.printf("Key count: %d\n", valid_keys.count);

    // Part 2
    var valid_keys2: [..] int;
    for valid_keys {
        var p0 = (it / 1     ) % 10;
        var p1 = (it / 10    ) % 10;
        var p2 = (it / 100   ) % 10;
        var p3 = (it / 1000  ) % 10;
        var p4 = (it / 10000 ) % 10;
        var p5 = (it / 100000) % 10;

        // Check for one double that isnt part of a larger group
        var valid = false;
        if p5 == p4 && p4 != p3 valid = true;
        if p5 != p4 && p4 == p3 && p3 != p2 valid = true;
        if p4 != p3 && p3 == p2 && p2 != p1 valid = true;
        if p3 != p2 && p2 == p1 && p1 != p0 valid = true;
        if p2 != p1 && p1 == p0 valid = true;

        if valid == false {
            // C.printf("Rej: %d\n", it);
            continue;
        }

        valid = (p5 <= p4) && (p4 <= p3) && (p3 <= p2) && (p2 <= p1) && (p1 <= p0);
        if valid == false continue;

        array_add(*valid_keys2, it);
    }

    C.printf("Key count: %d\n", valid_keys2.count);
}
